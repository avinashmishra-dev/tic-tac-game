{"version":3,"sources":["Component/GameUI.js","Component/Game.js","App.js","index.js"],"names":["GameUI","props","classes","className","onClick","gameState","Game","initialState","useState","gameData","setGameData","isChanged","setisChanged","onBoxClick","index","string","Array","from","useEffect","getWinner","lines","i","length","a","b","c","winner","setTimeout","alert","App","ReactDOM","render","document","getElementById"],"mappings":"qMAKeA,EALA,SAACC,GACd,IAAMC,EAAUD,EAAME,UAAN,UAAqBF,EAAME,UAA3B,oBAChB,OAAQ,sBAAMA,UAAWD,EAASE,QAASH,EAAMG,QAAzC,SAAmDH,EAAMI,aCsGpDC,EApGF,WACX,IAAMC,EAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtD,EAAgCC,mBAASD,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAa,SAACC,GAClB,IAAIC,EAASC,MAAMC,KAAKR,GACxBM,EAAOD,GAASH,EAAY,IAAM,IAClCD,EAAYK,GACZH,GAAcD,IA+BhB,OATAO,qBAAU,WACR,IAAMC,EApBO,WAWb,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIhB,EAASc,KAAOd,EAASe,IAAMf,EAASc,KAAOd,EAASgB,GAC1D,OAAOhB,EAASc,GAGpB,OAAO,KAGWG,GAClBC,YAAW,WACPR,IACFS,MAAM,GAAD,OAAIT,EAAJ,sBACLT,EAAYH,MACX,OACF,CAACE,IAGF,sBAAKN,UAAU,aAAf,UACI,0EACF,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CACEA,UAAW,iBACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,MAE5B,cAAC,EAAD,CACEV,UAAW,iBACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,MAE5B,cAAC,EAAD,CACEV,UAAW,WACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,SAG9B,sBAAKV,UAAU,gBAAf,UACE,cAAC,EAAD,CACEA,UAAW,iBACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,MAE5B,cAAC,EAAD,CACEV,UAAW,iBACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,MAE5B,cAAC,EAAD,CACEV,UAAW,WACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,SAG9B,sBAAKV,UAAU,gBAAf,UACE,cAAC,EAAD,CACEA,UAAW,UACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,MAE5B,cAAC,EAAD,CACEV,UAAW,UACXE,UAAWI,EAAS,GACpBL,QAAS,kBAAMS,EAAW,MAE5B,cAAC,EAAD,CAAQR,UAAWI,EAAS,GAAIL,QAAS,kBAAMS,EAAW,SAE5D,wBACEV,UAAU,eACVC,QAAS,kBAAMM,EAAYH,IAF7B,4BCvFSsB,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.07c894b0.chunk.js","sourcesContent":["const GameUI = (props) => {\r\n  const classes = props.className ? `${props.className} square` : `square`;\r\n  return (<span className={classes} onClick={props.onClick}>{props.gameState}</span>);\r\n};\r\n\r\nexport default GameUI;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport GameUI from \"./GameUI\";\r\n\r\nconst Game = () => {\r\n  const initialState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\n  const [gameData, setGameData] = useState(initialState);\r\n  const [isChanged, setisChanged] = useState(false);\r\n  const onBoxClick = (index) => {\r\n    let string = Array.from(gameData);\r\n    string[index] = isChanged ? \"O\" : \"X\";\r\n    setGameData(string);\r\n    setisChanged(!isChanged);\r\n  };\r\n\r\n  const winner = () => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (gameData[a] === gameData[b] && gameData[a] === gameData[c]) {\r\n        return gameData[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  useEffect(() => {\r\n    const getWinner = winner();\r\n    setTimeout(()=>{\r\n    if (getWinner) {\r\n      alert(`${getWinner} has won the game`);\r\n      setGameData(initialState);\r\n    }},1000)\r\n  }, [gameData]);\r\n\r\n  return (\r\n    <div className=\"app-header\">\r\n        <p>Click on any of the box to start the Game</p>\r\n      <div className=\"row jc-center\">\r\n        <GameUI\r\n          className={\"b-bottom-right\"}\r\n          gameState={gameData[0]}\r\n          onClick={() => onBoxClick(0)}\r\n        />\r\n        <GameUI\r\n          className={\"b-bottom-right\"}\r\n          gameState={gameData[1]}\r\n          onClick={() => onBoxClick(1)}\r\n        />\r\n        <GameUI\r\n          className={\"b-bottom\"}\r\n          gameState={gameData[2]}\r\n          onClick={() => onBoxClick(2)}\r\n        />\r\n      </div>\r\n      <div className=\"row jc-center\">\r\n        <GameUI\r\n          className={\"b-bottom-right\"}\r\n          gameState={gameData[3]}\r\n          onClick={() => onBoxClick(3)}\r\n        />\r\n        <GameUI\r\n          className={\"b-bottom-right\"}\r\n          gameState={gameData[4]}\r\n          onClick={() => onBoxClick(4)}\r\n        />\r\n        <GameUI\r\n          className={\"b-bottom\"}\r\n          gameState={gameData[5]}\r\n          onClick={() => onBoxClick(5)}\r\n        />\r\n      </div>\r\n      <div className=\"row jc-center\">\r\n        <GameUI\r\n          className={\"b-right\"}\r\n          gameState={gameData[6]}\r\n          onClick={() => onBoxClick(6)}\r\n        />\r\n        <GameUI\r\n          className={\"b-right\"}\r\n          gameState={gameData[7]}\r\n          onClick={() => onBoxClick(7)}\r\n        />\r\n        <GameUI gameState={gameData[8]} onClick={() => onBoxClick(8)} />\r\n      </div>\r\n      <button\r\n        className=\"clear-button\"\r\n        onClick={() => setGameData(initialState)}\r\n      >\r\n        Reset Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import \"./App.css\";\nimport Game from \"./Component/Game\";\n\nfunction App() {\n  return <Game/>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}